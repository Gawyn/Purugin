#!/usr/bin/env ruby

require 'rss'
require 'open-uri'
require 'openssl'
require 'fileutils'
require 'yaml'

OpenSSL::SSL::VERIFY_PEER = OpenSSL::SSL::VERIFY_NONE

BIN_DIR = File.join File.dirname(__FILE__)

directory = ARGV.shift || "../minecraft"
config_url = ARGV.shift || "http://cloud.github.com/downloads/enebo/Purugin/bits.yml"
yaml = open(config_url) { |f| f.read }
resources = YAML.load(yaml)

def retrieve(uri, as_name)
  puts "Retrieving #{as_name} from #{uri}"
  File.open(as_name, "wb") { |f| f.write open(uri) { |f| f.read } }
  puts "Done retrieving #{as_name} from #{uri}"
rescue
  puts "Error: Unable to retrieve #{uri}: #{$!}"
  puts "Try running again of manually try and retrieve"
end

Dir.mkdir directory unless File.exist? directory
FileUtils.cp File.join(BIN_DIR, "run.bat"), directory, :preserve => true
FileUtils.cp File.join(BIN_DIR, "run.sh"), directory, :preserve => true
Dir.chdir(directory) do
  resources["jars"].each { |file_name, url| retrieve url, file_name }

  Dir.mkdir "plugins" unless File.exist? "plugins"
  Dir.mkdir "gems" unless File.exist? "gems"
  Dir.chdir("plugins") do
    resources["plugins"].each do |file_name, url|
      retrieve url, file_name
      if file_name =~ /.zip/
 	# Yuck...no extra gems for install please unless I break down 
 	# and start using bundler
	system "unzip", file_name
	File.unlink file_name
      end
    end
  end
end
